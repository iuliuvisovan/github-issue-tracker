// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Issues Screen renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                MockedScreen
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#f4f6f6",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "#f4f6f6",
                              "padding": 16,
                            },
                            Object {},
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "marginTop": 16,
                              },
                              Object {
                                "marginTop": 0,
                              },
                            ]
                          }
                        >
                          <Text />
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#14181c",
                                  "fontFamily": "muli",
                                  "lineHeight": 16,
                                },
                                Object {
                                  "color": "#414d5b",
                                  "fontSize": 16,
                                  "marginLeft": 8,
                                  "marginTop": 6,
                                },
                              ]
                            }
                          >
                            facebook / react-native
                          </Text>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#00aaff",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "height": 30,
                                "justifyContent": "center",
                                "marginLeft": 12,
                                "opacity": 1,
                                "paddingLeft": 1,
                                "paddingTop": 0,
                                "width": 30,
                              }
                            }
                            testID="expandPickerButton"
                          >
                            <Text />
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "marginTop": 16,
                            }
                          }
                        >
                          <Text />
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#00aaff",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "height": 30,
                                "marginLeft": 8,
                                "opacity": 1,
                                "paddingHorizontal": 16,
                                "paddingTop": 6,
                                "paddingVertical": 4,
                              }
                            }
                            testID="open"
                          >
                            <Text />
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#14181c",
                                    "fontFamily": "muli",
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "color": "#00aaff",
                                  },
                                ]
                              }
                            >
                              Open
                               issues
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#00aaff",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "height": 30,
                                "marginLeft": 8,
                                "opacity": 1,
                                "paddingHorizontal": 16,
                                "paddingTop": 6,
                                "paddingVertical": 4,
                              }
                            }
                            testID="closed"
                          >
                            <Text />
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#14181c",
                                    "fontFamily": "muli",
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "color": "#00aaff",
                                  },
                                ]
                              }
                            >
                              Closed
                               issues
                            </Text>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "marginTop": 16,
                            }
                          }
                        >
                          <Text />
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#fff",
                                "borderColor": "#00aaff",
                                "borderRadius": 16,
                                "borderWidth": 1,
                                "flexDirection": "row",
                                "height": 30,
                                "marginLeft": 8,
                                "opacity": 1,
                                "paddingHorizontal": 16,
                                "paddingTop": 2,
                              }
                            }
                          >
                            <Text />
                            <Text
                              style={
                                Array [
                                  Object {
                                    "color": "#14181c",
                                    "fontFamily": "muli",
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "color": "#00aaff",
                                  },
                                ]
                              }
                            >
                              Sort By 
                              Created Date
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Object {
                            "alignSelf": "center",
                            "marginTop": 24,
                          }
                        }
                      >
                        <ActivityIndicator
                          animating={true}
                          color="#00aaff"
                          hidesWhenStopped={true}
                          size="small"
                        />
                      </View>
                      <View
                        pointerEvents="box-none"
                        style={
                          Object {
                            "bottom": 0,
                            "flexDirection": "row",
                            "justifyContent": "space-between",
                            "left": 0,
                            "paddingHorizontal": 16,
                            "position": "absolute",
                            "width": 750,
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderColor": "#aab2ba",
                              "borderRadius": 609,
                              "borderWidth": 1,
                              "elevation": 0,
                              "flex": 0,
                              "flexDirection": "row",
                              "height": 39,
                              "justifyContent": "center",
                              "marginVertical": 8,
                              "opacity": 1,
                              "paddingHorizontal": 16,
                              "shadowColor": "#aab2ba",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0,
                              "shadowRadius": 4,
                              "width": 120,
                            }
                          }
                          testID="previousPageButton"
                        >
                          <Text />
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#14181c",
                                  "fontFamily": "muli",
                                  "lineHeight": 16,
                                },
                                Object {
                                  "color": "#00aaff",
                                  "fontFamily": "muli-extra-bold",
                                  "fontSize": 12,
                                  "letterSpacing": 0.8,
                                },
                                Object {
                                  "color": "#00aaff",
                                  "marginHorizontal": 2,
                                },
                                Object {
                                  "color": "#aab2ba",
                                },
                              ]
                            }
                          >
                            PREVIOUS
                          </Text>
                        </View>
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#fff",
                              "borderColor": "#00aaff",
                              "borderRadius": 609,
                              "borderWidth": 1,
                              "elevation": 0,
                              "flex": 0,
                              "flexDirection": "row",
                              "height": 39,
                              "justifyContent": "center",
                              "marginVertical": 8,
                              "opacity": 1,
                              "paddingHorizontal": 16,
                              "shadowColor": "#aab2ba",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0,
                              "shadowRadius": 4,
                              "width": 120,
                            }
                          }
                          testID="nextPageButton"
                        >
                          <Text
                            style={
                              Array [
                                Object {
                                  "color": "#14181c",
                                  "fontFamily": "muli",
                                  "lineHeight": 16,
                                },
                                Object {
                                  "color": "#00aaff",
                                  "fontFamily": "muli-extra-bold",
                                  "fontSize": 12,
                                  "letterSpacing": 0.8,
                                },
                                Object {
                                  "color": "#00aaff",
                                  "marginHorizontal": 2,
                                },
                                Object {},
                              ]
                            }
                          >
                            NEXT
                          </Text>
                          <Text />
                        </View>
                        <ViewManagerAdapter_ExpoLinearGradient
                          pointerEvents="none"
                          proxiedProperties={
                            Object {
                              "colors": Array [
                                4279643,
                                1145130331,
                              ],
                              "endPoint": undefined,
                              "locations": undefined,
                              "startPoint": undefined,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "height": 40,
                              "left": 0,
                              "position": "absolute",
                              "width": 750,
                              "zIndex": -1,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
